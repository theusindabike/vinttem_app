name: Flutter Package Workflow


on:
  workflow_call:
    inputs:
      concurrency:
        required: false
        type: number
        default: 4
      coverage_excludes:
        required: false
        type: string
        default: ""
      flutter_channel:
        required: false
        type: string
        default: "stable"
      flutter_version:
        required: false
        type: string
        default: ""
      working_directory:
        required: false
        type: string
        default: "."
      min_coverage:
        required: false
        type: number
        default: 100
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"


jobs:
  build:
    defaults:
      run:
        working-directory: ${{inputs.working_directory}}


    runs-on: ${{inputs.runs_on}}


    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3


      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{inputs.flutter_version}}
          channel: ${{inputs.flutter_channel}}
          cache: true


      - name: 📦 Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good --analytics false
          very_good packages get --recursive
          make githubactions_build_runner

      - name: ✨ Check Formatting
        run: dart format --set-exit-if-changed lib test


      - name: 🕵️ Analyze
        run: flutter analyze lib test


      - name: 🧪 Run Tests
        run: flutter test --coverage --test-randomize-ordering-seed random


      - name: 📊 Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: ${{inputs.working_directory}}/coverage/lcov.info
          exclude: ${{inputs.coverage_excludes}}
          min_coverage: ${{inputs.min_coverage}}

      - name: Create Badges
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.BADGE_GIST_SECRET }}
          gistID: <gist-ID>
          filename: test.json
          label: Hello
          message: World
          color: orange